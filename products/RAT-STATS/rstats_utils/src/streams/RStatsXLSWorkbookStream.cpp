/*
    RStatsXLSWorkbookStream.cpp
    

*/
//----------------------------------------
//RStatsXLSWorkbookStream.cpp generated by cbtek on 04-27-2017 at 01:15:04 AM
//----------------------------------------
#include "RStatsXLSWorkbookStream.h"
#include "contrib/basic_excel/inc/BasicExcel.hpp"

using namespace cbtek::common::utility;

namespace oig {
namespace ratstats {
namespace utils {
namespace streams {

RStatsXLSWorkbookStream::RStatsXLSWorkbookStream(const std::string &filePath)
{
    m_filePath = filePath;
}

void RStatsXLSWorkbookStream::write(const RStatsWorkbook &workbook)
{
    YExcel::BasicExcel writer;
    for (size_t a1 = 0; a1 < workbook.getNumWorksheets();++a1)
    {
        const RStatsWorksheet& sheetIn = workbook(a1);
        YExcel::BasicExcelWorksheet * sheetOut = writer.AddWorksheet(static_cast<int>(a1));
        size_t rowCount = sheetIn.getNumRows();
        size_t columnCount = sheetIn.getNumColumns();
        for (size_t r = 0; r < rowCount; ++r)
        {
            for (size_t c = 0; c < columnCount; ++c)
            {
                YExcel::BasicExcelCell * cell = sheetOut->Cell(r,c);
                cell->SetString(sheetIn(r,c).text.c_str());
            }
        }
    }
}

RStatsWorkbook RStatsXLSWorkbookStream::read()
{
    RStatsWorkbook workbook;
    YExcel::BasicExcel reader;
    if (reader.Load(m_filePath.c_str()))
    {
        size_t numSheets = reader.GetTotalWorkSheets();
        for (size_t a1 = 0; a1 < numSheets; ++a1)
        {
            char sheetName[255];
            reader.GetSheetName(a1,sheetName);
            YExcel::BasicExcelWorksheet * sheetIn = reader.GetWorksheet(a1);
            RStatsWorksheet sheetOut;
            size_t rowCount = sheetIn->GetTotalRows();
            size_t columnCount = sheetIn->GetTotalCols();
            //std::cerr << rowCount << " x "<<columnCount << std::endl;
            for (size_t r = 0; r < rowCount; ++r)
            {
                for (size_t c = 0; c < columnCount; ++c)
                {
                    YExcel::BasicExcelCell * cell = sheetIn->Cell(r,c);
                    switch(cell->Type())
                    {
                        case YExcel::BasicExcelCell::INT:sheetOut(r,c).text = StringUtils::toString(cell->GetInteger());break;
                        case YExcel::BasicExcelCell::DOUBLE:sheetOut(r,c).text = StringUtils::toString(cell->GetDouble());break;
                        case YExcel::BasicExcelCell::STRING:sheetOut(r,c).text = std::string(cell->GetString());break;
                        default:break;
                    }
                }
            }
            workbook.addWorksheet(sheetOut);
        }
    }
    return workbook;
}

RStatsXLSWorkbookStream::~RStatsXLSWorkbookStream()
{

}




}}}}//end namespace


