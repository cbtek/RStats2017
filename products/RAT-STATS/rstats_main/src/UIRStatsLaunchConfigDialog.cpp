/*
    UIRStatsLaunchConfigDialog.cpp
    

*/
//UIRStatsLaunchConfigDialog.cpp generated by sunefusion on 02-28-2017 at 09:25:06 PM

#include "UIRStatsLaunchConfigDialog.h"
#include "ui_UIRStatsLaunchConfigDialog.h"

namespace oig {
namespace ratstats {
namespace main {


UIRStatsLaunchConfigDialog::UIRStatsLaunchConfigDialog(const utils::RStatsModuleProperties &props, QWidget *parent) :
    QDialog(parent),
    m_ui(new Ui_UIRStatsLaunchConfigDialog)
{
    m_ui->setupUi(this);
    m_props = props;
    onInit();
}

UIRStatsLaunchConfigDialog::~UIRStatsLaunchConfigDialog()
{
    delete m_ui;
}

void UIRStatsLaunchConfigDialog::onInit()
{
    m_ui->m_txtName->setText(QString::fromStdString(m_props.getName()));
    m_ui->m_cmbTypes->setCurrentText(QString::fromStdString(m_props.getType()));
    m_ui->m_txtLocation->setText(QString::fromStdString(m_props.getLocation()));
    m_ui->m_txtWorkingDir->setText(QString::fromStdString(m_props.getWorkingDir()));
    m_ui->m_tblArgs->clear();
    size_t row = 0;
    for(const auto& it : m_props.getArgs())
    {
        m_ui->m_tblArgs->setItem(row,0,new QTableWidgetItem(QString::fromStdString(it.first)));
        m_ui->m_tblArgs->setItem(row,1,new QTableWidgetItem(QString::fromStdString(it.second)));
        ++row;
    }

    connect(m_ui->m_btnSave,SIGNAL(clicked(bool)),this,SLOT(onSave()));
    connect(m_ui->m_btnCancel,SIGNAL(clicked(bool)),this,SLOT(onCancel()));
    connect(m_ui->m_btnLaunch,SIGNAL(clicked(bool)),this,SLOT(onLaunch()));
}

void UIRStatsLaunchConfigDialog::onSave()
{
    m_props.setName(m_ui->m_txtName->text().toStdString());
    m_props.setLocation(m_ui->m_txtLocation->text().toStdString());
    m_props.setWorkingDir(m_ui->m_txtWorkingDir->text().toStdString());
    m_props.setType(m_ui->m_cmbTypes->currentText().toStdString());
    m_props.clearArgs();
    for (size_t a1 = 0;a1<m_ui->m_tblArgs->rowCount();++a1)
    {
        QString flag = m_ui->m_tblArgs->item(a1,0)->text();
        QString argument = m_ui->m_tblArgs->item(a1,1)->text();
        if (flag.isEmpty() && argument.isEmpty())
        {
            break;
        }
        m_props.addArg(flag.toStdString(),argument.toStdString());
    }
    emit propertiesSaved(m_props);
    this->close();
}

void UIRStatsLaunchConfigDialog::onCancel()
{
    this->close();
}

void UIRStatsLaunchConfigDialog::onLaunch()
{
    this->close();
}
}}}//end namespace

