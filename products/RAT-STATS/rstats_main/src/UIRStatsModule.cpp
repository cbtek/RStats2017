/*
    UIRStatsModule.cpp
    

*/
//UIRStatsModule.cpp generated by windows on 04-28-2017 at 04:42:26 PM

#include "UIRStatsModule.h"
#include "ui_UIRStatsModule.h"

#include "rstats_ui/inc/UIRStatsUtils.hpp"

using namespace oig::ratstats::ui;
using namespace oig::ratstats::utils;

namespace oig {
namespace ratstats {
namespace main {


UIRStatsModule::UIRStatsModule(oig::ratstats::utils::RStatsModuleProperties props,
                               int row,
                               QWidget *parent) :
    QWidget(parent),
    QAccessibleWidget(this),
    m_ui(new Ui_UIRStatsModule)
{

    m_ui->setupUi(this);
    m_props = props;
    m_row = row;
    m_ui->m_btnDelete->setIcon(UIRStatsUtils::getIcon("img_remove.png"));
    m_ui->m_btnEdit->setIcon(UIRStatsUtils::getIcon("img_edit.png"));
    m_ui->m_lblName->setText(QString::fromStdString(m_props.getName()));
    this->setAccessibleName(QString::fromStdString(m_props.getName()));
    this->setAccessibleDescription(QString::fromStdString(m_props.getName()));
    m_ui->m_lblIcon->setPixmap(UIRStatsUtils::getIcon(props.getIcon()).pixmap(24,24));
    connect(m_ui->m_btnDelete,SIGNAL(clicked(bool)),this,SLOT(onDelete()));
    connect(m_ui->m_btnEdit,SIGNAL(clicked(bool)),this,SLOT(onEdit()));

}

QString UIRStatsModule::text(QAccessible::Text t) const
{
    switch(t)
    {
        case QAccessible::Name:return QString::fromStdString(m_props.getName());
        case QAccessible::Description:return QString::fromStdString(m_props.getName());
        case QAccessible::Value:return QString::fromStdString(m_props.getName());
        case QAccessible::Help:return QString::fromStdString(m_props.getName());
        case QAccessible::Accelerator:return QString::fromStdString(m_props.getName());
        case QAccessible::UserText:return QString::fromStdString(m_props.getName());
    }
}

QAccessible::Role UIRStatsModule::role(int child) const
{
    return QAccessible::ListItem;
}

UIRStatsModule::~UIRStatsModule()
{
    delete m_ui;
}

void UIRStatsModule::onDelete()
{
    emit deleted(m_props,m_row);
}

void UIRStatsModule::onEdit()
{
    emit edited(m_props,m_row);
}

void UIRStatsModule::onLaunch()
{
    emit launched(m_props,m_row);
}

void UIRStatsModule::showEvent(QShowEvent *event)
{
    int sz = m_ui->m_lblIcon->height();
    m_ui->m_lblIcon->setPixmap(UIRStatsUtils::getIcon(m_props.getIcon()).pixmap(sz,sz));
    m_ui->m_lblIcon->setMinimumSize(QSize(sz,sz));
    m_ui->m_lblIcon->setMaximumSize(QSize(sz,sz));
}
}}}//end namespace

