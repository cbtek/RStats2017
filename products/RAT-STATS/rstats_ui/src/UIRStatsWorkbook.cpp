/*
    UIRStatsWorkbook.cpp
    

*/
//UIRStatsWorkbook.cpp generated by CBTek Solutions on 02-02-2017 at 12:51:01 AM

#include "UIRStatsWorkbook.h"
#include "ui_UIRStatsWorkbook.h"

namespace oig {
namespace ratstats {
namespace ui {

using namespace oig::ratstats::utils;

UIRStatsWorkbook::UIRStatsWorkbook(QWidget *parent) : QWidget(parent),m_ui(new Ui_UIRStatsWorkbook)
{
    m_ui->setupUi(this);
}

UIRStatsWorkbook::UIRStatsWorkbook(const RStatsWorkbook &workbook, QWidget *parent): QWidget(parent),m_ui(new Ui_UIRStatsWorkbook)
{
    m_ui->setupUi(this);
    setWorkbook(workbook);
}

void UIRStatsWorkbook::setWorkbook(const RStatsWorkbook &workbook)
{
    QList<int> sizes;
    sizes << 100 << 700;
    m_ui->splitter->setSizes(sizes);

    m_workbook = workbook;
    std::vector<std::string> names = m_workbook.getWorksheetNames();
    for(const std::string& name : names)
    {
        m_ui->m_lstWorksheets->addItem(QString::fromStdString(name));
    }
    if (m_ui->m_lstWorksheets->count())
    {
        m_ui->m_lstWorksheets->setCurrentRow(0);
        onSheetSelected(0);
    }
    connect(m_ui->m_lstWorksheets,SIGNAL(currentRowChanged(int)),this,SLOT(onSheetSelected(int)));
}

UIRStatsWorkbook::~UIRStatsWorkbook()
{
    delete m_ui;
}

void UIRStatsWorkbook::onPopulateTable(const RStatsWorksheet &sheet)
{
    m_ui->m_tblCurrentSheet->clear();
    m_ui->m_tblCurrentSheet->setColumnCount(sheet.getNumColumns());
    m_ui->m_tblCurrentSheet->setRowCount(sheet.getNumRows());
    for (size_t a1 = 0; a1 < sheet.getNumColumns();++a1)
    {
        QTableWidgetItem * header = new QTableWidgetItem;
        header->setText(QString::fromStdString(RStatsUtils::getColumnLabelFromIndex(a1)));
        m_ui->m_tblCurrentSheet->setHorizontalHeaderItem(a1,header);
    }

    for(const auto& itNext : sheet.getCells())
    {
        std::pair<size_t,size_t> index = itNext.first;
        RStatsCell cell = itNext.second;
        QTableWidgetItem * item = new QTableWidgetItem;
        item->setText(QString::fromStdString(cell.text));
        m_ui->m_tblCurrentSheet->setRowHeight(index.first,30);
        //set colors
        int r,g,b;
        r = cell.bgColor.getRed();
        g = cell.bgColor.getGreen();
        b = cell.bgColor.getBlue();
        item->setBackground(QBrush(QColor(r,g,b)));

        r = cell.fgColor.getRed();
        g = cell.fgColor.getGreen();
        b = cell.fgColor.getBlue();
        item->setForeground(QBrush(QColor(r,g,b)));

        //set font
        QFont font;
        font.setBold(cell.font.isBold());
        font.setUnderline(cell.font.isUnderlined());
        font.setItalic(cell.font.isItalic());
        font.setFamily(QString::fromStdString(cell.font.getFontFamily()));
        font.setPointSize(cell.font.getPointSize());
        item->setFont(font);
        switch(cell.alignment)
        {
            case RStatsTextAlignment::AlignMiddle:item->setTextAlignment(Qt::AlignVCenter | Qt::AlignHCenter);break;
            case RStatsTextAlignment::AlignRight:item->setTextAlignment(Qt::AlignVCenter | Qt::AlignRight);break;
            default:item->setTextAlignment(Qt::AlignVCenter | Qt::AlignLeft);break;
        }
        m_ui->m_tblCurrentSheet->setItem(index.first,index.second,item);
    }
}

void UIRStatsWorkbook::onSheetSelected(int index)
{
    if (index >=0 && index < m_workbook.getNumWorksheets())
    {
        onPopulateTable(m_workbook(index));
        onResizeToContents();
    }
}

void UIRStatsWorkbook::onResizeToContents()
{

    if (m_ui->m_tblCurrentSheet->columnCount() > 0)
    {
        m_ui->m_tblCurrentSheet->horizontalHeader()->setSectionResizeMode(m_ui->m_tblCurrentSheet->columnCount()-1,QHeaderView::ResizeToContents);
    }
    m_ui->m_tblCurrentSheet->resizeRowsToContents();
    m_ui->m_tblCurrentSheet->update();
    this->update();
}
}}}//end namespace

