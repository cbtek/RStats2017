/*
    UIRStatsScriptProviderConfigDialog.cpp
    

*/
//UIRStatsScriptProviderConfigDialog.cpp generated by sunefusion on 03-04-2017 at 08:58:00 AM

#include "UIRStatsScriptProviderConfigDialog.h"
#include "ui_UIRStatsScriptProviderConfigDialog.h"


#include <QFileDialog>
#include <QDir>
#include <QFile>
#include <QMessageBox>
#include <QProcess>

#include "rstats_utils/inc/RStatsUtils.hpp"

#include "utility/inc/FileUtils.hpp"
#include "utility/inc/SystemUtils.hpp"
#include "utility/inc/DateTimeUtils.hpp"

#include "rstats_ui/inc/UIRStatsErrorMessage.h"
#include "rstats_ui/inc/UIRStatsUtils.hpp"


using namespace cbtek::common::utility;
using namespace oig::ratstats::utils;
using namespace oig::ratstats::ui;


namespace oig {
namespace ratstats {
namespace ui {


UIRStatsScriptProviderConfigDialog::UIRStatsScriptProviderConfigDialog(const utils::RStatsScriptProviderProperties & props,
                                                                       QWidget *parent) :
    QDialog(parent),
    m_ui(new Ui_UIRStatsScriptProviderConfigDialog)
{
    m_ui->setupUi(this);
    m_props = props;


    UIRStatsUtils::customUISetup(nullptr,
                                 m_ui->m_btnCancel,
                                 nullptr,
                                 m_ui->m_btnBrowseLocation,
                                 nullptr,
                                 nullptr,
                                 m_ui->m_btnCancel,
                                 nullptr,
                                 m_ui->m_btnSetIcon,
                                 m_ui->m_btnBrowseLocation);

    UIRStatsUtils::setButtonStyle(m_ui->m_btnSave,
                                  this->font(),
                                  UIRStatsUtils::getIcon("img_ok.png"),
                                  32,false);

    onInit();

    //Setup signal/slot connections
    connect(m_ui->m_btnSave,SIGNAL(clicked(bool)),this,SLOT(onOk()));
    connect(m_ui->m_btnCancel,SIGNAL(clicked(bool)),this,SLOT(close()));
    connect(m_ui->m_btnBrowseLocation,SIGNAL(clicked(bool)),this,SLOT(onBrowseProviderPath()));
    connect(m_ui->m_btnSetIcon,SIGNAL(clicked(bool)),this,SLOT(onBrowseProviderIcon()));
}

UIRStatsScriptProviderConfigDialog::~UIRStatsScriptProviderConfigDialog()
{
    delete m_ui;
}

void UIRStatsScriptProviderConfigDialog::onInit()
{    

    m_ui->m_txtName->setText(QString::fromStdString(m_props.getName()));
    m_ui->m_txtLocation->setText(QString::fromStdString(m_props.getPath()));
    m_ui->m_txtArgs->setText(QString::fromStdString(m_props.getArgs()));

    this->setWindowTitle("Script Provider Properties Dialog");

    QIcon icon = UIRStatsUtils::getIcon(m_props.getIcon());
    if (!icon.isNull())
    {
        m_ui->m_btnSetIcon->setIcon(icon);
    }      
}

void UIRStatsScriptProviderConfigDialog::onOk()
{
    QString name = m_ui->m_txtName->text();
    if (name.isEmpty())
    {
        m_props.setName("Unnamed Script Provider_"+DateTimeUtils::getTimeStamp());
    }

    //Save property values and close
    m_props.setName(m_ui->m_txtName->text().toStdString());
    m_props.setPath(m_ui->m_txtLocation->text().toStdString());
    m_props.setArgs(m_ui->m_txtArgs->text().toStdString());
    if (FileUtils::fileExists(m_props.getConfigPath()))
    {
        m_props.saveConfig();
    }
    else
    {
        std::string path = RStatsUtils::getScriptProviderPropertiesPath();
        path = FileUtils::buildFilePath(path,"provider_"+FileUtils::getSanitizedPathName(m_props.getName()+DateTimeUtils::getTimeStamp())+".xml");
        m_props.saveConfig(path);
    }


    this->close();
}

void UIRStatsScriptProviderConfigDialog::onBrowseProviderIcon()
{
    QString file = QFileDialog::getOpenFileName(this,"Search for provider icon...","","Images (*.jpg *.png *.ico)");
    if (QFile::exists(file))
    {
        m_props.setIcon(file.toStdString());
        QIcon icon(file);
        m_ui->m_btnSetIcon->setIcon(icon);
    }
}

void UIRStatsScriptProviderConfigDialog::onBrowseProviderPath()
{
    QString file = QFileDialog::getOpenFileName(this,"Search for provider path...","");
    if (QFile::exists(file))
    {
        m_ui->m_txtLocation->setText(file);
    }
}
}}}//end namespace

