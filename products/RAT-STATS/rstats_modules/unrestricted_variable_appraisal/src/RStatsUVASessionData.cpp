/*
    RStatsUVASessionData.cpp
    

*/
//----------------------------------------
//RStatsUVASessionData.cpp generated by cbtek on 03-31-2017 at 01:38:55 AM
//----------------------------------------
#include "RStatsUVASessionData.h"

using namespace oig::ratstats::utils;

namespace oig {
namespace ratstats {
namespace modules {
namespace uva {


RStatsUVASessionData::RStatsUVASessionData()
{

}

RStatsUVASessionData::~RStatsUVASessionData()
{

}

void RStatsUVASessionData::setDataFormat(const RStatsDataFormatType & value)
{
    m_dataFormat=value;
}

void RStatsUVASessionData::setUniverseSize(const RStatsInteger & value)
{
    m_universeSize=value;
}

void RStatsUVASessionData::setDataRowStart(const RStatsInteger & value)
{
    m_dataRowStart=value;
}

void RStatsUVASessionData::setDataTable(const RStatsWorksheet & value)
{
    m_dataTable=value;
}

void RStatsUVASessionData::setExamineColumn(const std::string & value)
{
    m_examineColumn=value;
}

void RStatsUVASessionData::setAuditColumn(const std::string & value)
{
    m_auditColumn=value;
}

void RStatsUVASessionData::setDifferenceColumn(const std::string & value)
{
    m_differenceColumn=value;
}

const RStatsDataFormatType &RStatsUVASessionData::getDataFormat() const
{
    return m_dataFormat;
}

const RStatsInteger &RStatsUVASessionData::getUniverseSize() const
{
    return m_universeSize;
}

const RStatsInteger &RStatsUVASessionData::getDataRowStart() const
{
    return m_dataRowStart;
}

const RStatsWorksheet &RStatsUVASessionData::getDataTable() const
{
    return m_dataTable;
}

const std::string &RStatsUVASessionData::getExamineColumn() const
{
    return m_examineColumn;
}

const std::string &RStatsUVASessionData::getAuditColumn() const
{
    return m_auditColumn;
}

const std::string &RStatsUVASessionData::getDifferenceColumn() const
{
    return m_differenceColumn;
}

std::string RStatsUVASessionData::getType() const
{
    return c_RECENT_SESSION_EXTENSION;
}

void RStatsUVASessionData::save(const std::string &url)
{

}

void RStatsUVASessionData::load(const std::string &url)
{

}

}}}}//end namespace


