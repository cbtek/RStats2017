/*
    RStatsXLSXWorkbookStream.cpp
    

*/
//----------------------------------------
//RStatsXLSXWorkbookStream.cpp generated by CBTek Solutions on 02-01-2017 at 11:54:04 PM
//----------------------------------------
#include "RStatsXLSXWorkbookStream.h"

#include "RStatsWorksheet.h"

#include "utility/inc/DateTimeUtils.hpp"
#include "utility/inc/SystemUtils.hpp"
#include "utility/inc/XMLUtils.h"

#include "rstats_utils/inc/RStatsUtils.hpp"

#include "contrib/mini_excel/MiniExcelReader.h"

using namespace cbtek::rocketstats::utils;
using namespace cbtek::common::utility;

namespace cbtek {
namespace rocketstats {
namespace utils {
namespace streams {

RStatsXLSXWorkbookStream::RStatsXLSXWorkbookStream(const std::string &filePath)
{
    m_filePath = filePath;
}

void RStatsXLSXWorkbookStream::write(const RStatsWorkbook &)
{
    THROW_GENERIC_EXCEPTION("The XLSX writing feature has not been added")            
}

RStatsWorkbook RStatsXLSXWorkbookStream::read()
{
    RStatsWorkbook workbook;
    MiniExcelReader::ExcelFile reader;
    if (!reader.open(m_filePath.c_str()))
    {
        THROW_GENERIC_EXCEPTION("Unable to open xlsx document at "+m_filePath)
    }
    for (MiniExcelReader::Sheet& sheetIn : reader.sheets())
    {
        RStatsWorksheet sheetOut;              
        MiniExcelReader::Range range = sheetIn.getDimension();
        for (int r = 0; r < range.lastRow; r++)
          {
              for (int c = 0; c < range.lastCol; c++)
              {
                  MiniExcelReader::Cell* cell = sheetIn.getCell(r+1, c+1);

                  sheetOut(r,c).text = cell ?cell->value: "";
              }
          }
        sheetOut.removeEmptyRows();
        sheetOut.removeEmptyColumns();
        sheetOut.setWorksheetTitle(sheetIn.getName());
        workbook.addWorksheet(sheetOut);
    }
    return workbook;
}

RStatsXLSXWorkbookStream::~RStatsXLSXWorkbookStream()
{

}
}}}}//end namespace


